<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Os on References</title>
    <link>https://kjw217.github.io/posts/cs/os/</link>
    <description>Recent content in Os on References</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Thu, 26 Dec 2019 12:03:45 +0900</lastBuildDate>
    
	<atom:link href="https://kjw217.github.io/posts/cs/os/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Operating System] 03 Process Scheduling</title>
      <link>https://kjw217.github.io/posts/cs/os/operating-system-03-process-scheduling/</link>
      <pubDate>Sat, 28 Dec 2019 17:00:54 +0900</pubDate>
      
      <guid>https://kjw217.github.io/posts/cs/os/operating-system-03-process-scheduling/</guid>
      <description>Process State 프로세스는 아래와 같은 5가지의 상태(State)를 가진다.
   상태 설명     new 프로세스가 만들어지기 전인 상태 (아직 프로세스가 아님)   ready 프로세스가 메모리에서 CPU에 할당되기를 기다리는(ready) 상태   running CPU가 프로세스의 명령을 수행하고 있는 상태   waiting 프로세스가 특정 event (e.</description>
    </item>
    
    <item>
      <title>[Operating System] 02 Process Concept</title>
      <link>https://kjw217.github.io/posts/cs/os/operating-system-02-process-concept/</link>
      <pubDate>Thu, 26 Dec 2019 12:16:15 +0900</pubDate>
      
      <guid>https://kjw217.github.io/posts/cs/os/operating-system-02-process-concept/</guid>
      <description>Process A program in execution
실행중인 프로그램
Process in Memory 다음 그림은 메모리 영역을 나타낸 그림이다.</description>
    </item>
    
    <item>
      <title>[Operating System] 01 Structure</title>
      <link>https://kjw217.github.io/posts/cs/os/operating-system-01-structure/</link>
      <pubDate>Thu, 26 Dec 2019 12:15:44 +0900</pubDate>
      
      <guid>https://kjw217.github.io/posts/cs/os/operating-system-01-structure/</guid>
      <description>Challenging Issues  At any given time, each resource can serve only one process   OS -&amp;gt; Process Management   Multiple processes can be executed while sharing memory   OS -&amp;gt; Memory Management   Using I/O device takes a long time, and CPU is idle and underutilized   OS -&amp;gt; I/O Management   An unauthorized process causes a system fault although other processes have no problem   OS -&amp;gt; Protection   Process Management  process: 실행중인 프로그램 process(thread) scheduling   Memory Manageement  CPU reads both instructions and data from main memory multitasking (Virtual) Memory Manangement   I/O Subsystem  There is always a device driver and device controller for each I/O device I/O request from application device controller takes action device controller informs the CPU via an interrupt that it has finished    Basic Operations OS의 기본적인 동작에는 multitasking, interrupt, protection이 있다</description>
    </item>
    
    <item>
      <title>[Operating System] 00 Intro</title>
      <link>https://kjw217.github.io/posts/cs/os/operating-system-00-intro/</link>
      <pubDate>Thu, 26 Dec 2019 12:15:22 +0900</pubDate>
      
      <guid>https://kjw217.github.io/posts/cs/os/operating-system-00-intro/</guid>
      <description>Operating System A collection of computer programs.
 mananges computer hardware resources.</description>
    </item>
    
  </channel>
</rss>